<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <title>PRM Editor</title>
    </head>
    <body>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input type="text" class="name" maxlength="79" autocomplete="off" /></td>
                    <td>
                        <select class="type">
                            <option>float</option>
                            <option>int</option>
                            <option>short</option>
                            <option>uchar</option>
                        </select>
                    </td>
                    <td><input type="text" class="value" autocomplete="off" /></td>
                </tr>
            </tbody>
        </table>
        <button id="dl">Download</button>
        <script>
            'use strict'

            function calcKeyCode(s) {
                return s.split('').reduce((p, c) => 3 * p + c.charCodeAt(0) & 0xFFFF, 0)
            }

            const table = document.querySelector('tbody'),
                sampleRow = table.querySelector('tr').cloneNode(true)
            
            table.addEventListener('change', function (e) {
                const row = e.target.parentNode.parentNode

                if (!row.nextElementSibling) {
                    table.appendChild(sampleRow.cloneNode(true))
                }
            })

            document.querySelector('#dl').addEventListener('click', function (e) {
                const params = table.querySelectorAll('tr:not(:last-of-type)'),
                    data = new ArrayBuffer(4 + params.length * 91), // worst case scenario
                    view = new DataView(data)

                let offset = 4

                view.setInt32(0, params.length)

                for (const p of params) {
                    const name = p.querySelector('.name').value.slice(0, 79)

                    view.setUint16(offset, calcKeyCode(name))
                    view.setUint16(offset + 2, name.length)
                    offset += 4

                    for (let i = 0; i < name.length; ++i) {
                        view.setUint8(offset + i, name.charCodeAt(i))
                    }
                    offset += name.length

                    switch (p.querySelector('.type').value) {
                        case 'float':
                            view.setInt32(offset, 4)
                            view.setFloat32(offset + 4, parseFloat(p.querySelector('.value').value))
                            offset += 8
                            break;
                        case 'int':
                            view.setInt32(offset, 4)
                            view.setInt32(offset + 4, parseInt(p.querySelector('.value').value))
                            offset += 8
                            break;
                        case 'short':
                            view.setInt32(offset, 2)
                            view.setInt16(offset + 4, parseInt(p.querySelector('.value').value))
                            offset += 6
                            break;
                        case 'uchar':
                            view.setInt32(offset, 1)
                            view.setUint8(offset + 4, parseInt(p.querySelector('.value').value))
                            offset += 5
                            break;
                    }
                }

                const file = new Blob([new DataView(data, 0, offset)], {type: 'application/octet-stream'})
                if (navigator.msSaveOrOpenBlob) {
                    navigator.msSaveOrOpenBlob(file, 'params.prm')
                } else {
                    const a = document.createElement('a')
                    a.href = URL.createObjectURL(file)
                    a.download = 'params.prm'
                    a.click()
                    setTimeout(function () { URL.revokeObjectURL(a.href) }, 500)
                }
            })
        </script>
    </body>
</html>